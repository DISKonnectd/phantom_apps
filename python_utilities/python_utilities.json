{
    "appid"       : "f3373a58-733d-4bd7-89ac-d6ce76019eae",
    "name"      : "Python Utilities",
    "description" : "Implements basic python functions for UI access",
    "publisher": "Robert Martin",
    "package_name": "phantom_python_utilities",
    "type": "generic",
    "license": "GNU GPLv3",
    "main_module" : "python_utilities_connector.pyc",
    "app_version": "1.4.0",
    "utctime_updated": "2018-04-19T12:20:00.000000Z",
    "product_vendor": "Generic",
    "product_name": "Python Utilities",
    "product_version_regex": ".*",
    "min_phantom_version": "3.0.0",
    "logo": "pythonutilities.png",
    "configuration": {},
    "actions": [
      {
        "action": "regex function",
        "description": "https://docs.python.org/2/library/re.html",
        "type": "generic",
        "identifier": "regex_function",
        "read_only": true,
        "parameters": {
          "start": {
            "description": "Starting position of the search. Defaults to 0",
            "data_type": "numeric",
            "required": false
          },
          "end": {
            "description": "Ending position of the search. Defaults to end of string.",
            "data_type": "numeric",
            "required": false
          },
          "pattern": {
            "description": "Regex pattern",
            "data_type": "string",
            "required": true
          },
          "source_string": {
            "description": "Source string.",
            "data_type": "string",
            "required": true
          },
          "replace": {
            "description": "The replacement value is only required for sub and subn actions. For a single space, use ' '. For deletion, use ''",
            "data_type": "string",
            "required": false,
            "default": " "
          },
          "action": {
            "description": "Action to take on string",
            "data_type": "string",
            "required": true,
            "default": "search",
            "value_list": ["search", "match", "split", "findall", "finditer", "sub", "subn"]
          }
        },
        "output": [
          {
            "data_path": "action_result.data",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.result",
            "data_type": "string"
          },
          {
            "data_path": "action_result.message",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.start",
            "data_type": "string"
          },          
          {
            "data_path": "action_result.parameter.end",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.pattern",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.source_string",
            "data_type": "string"
          },          
          {
            "data_path": "action_result.parameter.replace",
            "data_type": "string"
          },          
          {
            "data_path": "action_result.parameter.action",
            "data_type": "string"
          },
          {
            "data_path": "action_result.status",
            "data_type": "string"
          },
          {
            "data_path": "action_result.summary",
            "data_type": "string"
          }
        ],
        "versions":"EQ(*)"
      },
      {
        "action": "find string",
        "description": "Find a substring in a string and returns the index.",
        "type": "generic",
        "identifier": "find_string",
        "read_only": true,
        "parameters": {
          "search_string": {
            "description": "Substring to find in a string.",
            "data_type": "string",
            "primary": true,
            "required": true
          },
          "source_string": {
            "description": "String to search with substring.",
            "data_type": "string",
            "primary": true,
            "required": true
          },
          "source_string_start": {
            "description": "Starting index for search. Default is zero.",
            "data_type": "numeric",
            "primary": false,
            "requred": false
          },
          "source_string_end": {
            "description": "Ending index for search. Default is string length.",
            "data_type": "numeric",
            "primary": false,
            "requred": false
          }
        },
        "output": [
          {
            "data_path": "action_result.data",
            "data_type": "string"
          },
          {
            "data_path": "action_result.message",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.search_string",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.source_string",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.source_string_start",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.source_string_end",
            "data_type": "string"
          },
          {
            "data_path": "action_result.status",
            "data_type": "string"
          },
          {
            "data_path": "action_result.summary",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.search_string_index",
            "data_type": "string"
          }
        ],
        "versions":"EQ(*)"
      },
      {
        "action": "split string",
        "description": "Use regex to split a string into a list. The separator must be a valid regex. You may also use any single separator.",
        "type": "generic",
        "identifier": "split_string",
        "read_only": true,
        "parameters": {
          "separator": {
            "description": "Separators to split string.",
            "data_type": "string",
            "primary": true,
            "required": true
          },
          "source_string": {
            "description": "String to split.",
            "data_type": "string",
            "primary": true,
            "required": true
          }
        },
        "output": [
          {
            "data_path": "action_result.data",
            "data_type": "string"
          },
          {
            "data_path": "action_result.message",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.separator",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.source_string",
            "data_type": "string"
          },
          {
            "data_path": "action_result.status",
            "data_type": "string"
          },
          {
            "data_path": "action_result.summary",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.list",
            "data_type": "string"
          }
        ],
        "versions":"EQ(*)"
      },
      {
        "action": "get substring",
        "description": "Returns the substring based on the start, end, step indexes.",
        "type": "generic",
        "identifier": "get_substring",
        "read_only": true,
        "parameters": {
          "source_string_start": {
            "description": "Starting position of the string.",
            "data_type": "numeric",
            "primary": true,
            "required": false
          },
          "source_string_end": {
            "description": "Ending position of the string.",
            "data_type": "numeric",
            "primary": true,
            "required": false
          },
          "source_string_step": {
            "description": "Step",
            "data_type": "numeric",
            "primary": true,
            "required": false
          },
          "source_string": {
            "description": "Source string.",
            "data_type": "string",
            "primary": true,
            "required": true
          }
        },
        "output": [
          {
            "data_path": "action_result.data",
            "data_type": "string"
          },
          {
            "data_path": "action_result.message",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.source_string",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.source_string_start",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.source_string_end",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.source_string_step",
            "data_type": "string"
          },
          {
            "data_path": "action_result.status",
            "data_type": "string"
          },
          {
            "data_path": "action_result.summary",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.substring",
            "data_type": "string"
          }
        ],
        "versions":"EQ(*)"
      },
      {
        "action": "get date",
        "description": "Returns the current date and time.",
        "type": "generic",
        "identifier": "get_date",
        "read_only": true,
        "parameters": {
          "format_string": {
            "description": "strftime formatted string to return custom results.",
            "data_type": "string",
            "required": false
          }
        },
        "output": [
          {
            "data_path": "action_result.summary",
            "data_type": "string"
          },
          {
            "data_path": "action_result.status",
            "data_type": "string"
          },
          {
            "data_path": "action_result.message",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.format_string",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.local_datetime",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.local_year",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.local_month",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.local_day",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.local_hour",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.local_minute",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.local_second",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.local_weekday",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.local_day_number",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.local_tz",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.local_iso_week",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.local_iso_weekday",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.local_custom",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.utc_datetime",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.utc_year",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.utc_month",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.utc_day",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.utc_hour",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.utc_minute",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.utc_second",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.utc_weekday",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.utc_day_number",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.utc_tz",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.utc_iso_week",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.utc_iso_weekday",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.utc_custom",
            "data_type": "string"
          }
        ],
        "versions":"EQ(*)"
      },
      {
        "action": "offset date",
        "description": "Returns a datetime object offset by the input integer.",
        "type": "generic",
        "identifier": "offset_date",
        "read_only": true,
        "parameters": {
          "date": {
            "description": "datetime object to manipulate.",
            "data_type": "string",
            "required": false
          },
          "date_offset": {
            "description": "number of days to offset the date.",
            "data_type": "numeric",
            "required": true
          }
        },
        "output": [
          {
            "data_path": "action_result.summary",
            "data_type": "string"
          },
          {
            "data_path": "action_result.message",
            "data_type": "string"
          },
          {
            "data_path": "action_result.status",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.date_offset",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.date",
            "data_type": "string"
          }
        ],
        "versions":"EQ(*)"
      },
      {
        "action": "parse date",
        "description": "Returns datetime objects converted from a string.",
        "type": "generic",
        "identifier": "parse_date",
        "read_only": true,
        "parameters": {
          "date_string": {
            "description": "Date in string format.",
            "data_type": "string",
            "required": true
          },
          "format_string": {
            "description": "strftime formatted string to return.",
            "data_type": "string",
            "required": true
          }
        },
        "output": [
          {
            "data_path": "action_result.summary",
            "data_type": "string"
          },
          {
            "data_path": "action_result.message",
            "data_type": "string"
          },
          {
            "data_path": "action_result.status",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.format_string",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.date_string",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.datetime",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.year",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.month_num",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.month_name",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.month_abbrev",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.day",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.hour",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.minute",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.second",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.weekday_num",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.weekday_name",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.weekday_abbrev",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.day_number",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.tz",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.iso_week",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.iso_weekday",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.custom",
            "data_type": "string"
          }

        ],
        "versions":"EQ(*)"
      },
      {
        "action": "list functions",
        "description": "Provides basic list functions through the UI.",
        "type": "generic",
        "identifier": "list_func",
        "read_only": true,
        "parameters": {
          "list_1": {
            "description": "Primary list",
            "data_type": "string",
            "required": true
          },
          "list_2": {
            "description": "Secondary list (only needed for list compare function)",
            "data_type": "string",
            "required": false
          },
          "list_value": {
            "description": "Value to perform on list",
            "data_type": "string",
            "required": false
          },
          "list_index": {
            "description": "Index in list",
            "data_type": "string",
            "required": false
          },
          "list_function": {
            "description": "Action to perform on list",
            "data_type": "string",
            "value_list": [
                "cmp",
                "len",
                "max",
                "min",
                "lst",
                "app",
                "cnt",
                "ext",
                "idx",
                "ins",
                "pop",
                "rmv",
                "rev",
                "srt"
            ],
            "required": true,
            "order": 1
          }
        },
        "output": [
          {
            "data_path": "action_result.summary",
            "data_type": "string"
          },
          {
            "data_path": "action_result.message",
            "data_type": "string"
          },
          {
            "data_path": "action_result.status",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.list_1",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.list_2",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.list_value",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.list_index",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.parameter.list_function",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.value",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.list",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.count",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.max",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.min",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.length",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.compare",
            "data_type": "string"
          }
        ],
        "versions":"EQ(*)"
      },
      {
        "action": "diff date",
        "description": "Returns the difference between two dates.",
        "type": "generic",
        "identifier": "diff_date",
        "read_only": true,
        "parameters": {
          "start_date": {
            "description": "Start date in string format.",
            "data_type": "string",
            "required": true
          },
          "start_format": {
            "description": "strptime formatted string to parse the date",
            "data_type": "string",
            "required": true
          },
          "end_date": {
            "description": "End date in string format.",
            "data_type": "string",
            "required": true
          },
          "end_format": {
            "description": "strptime formatted string to parse the date.",
            "data_type": "string",
            "required": true
          }
        },
        "output": [
          {
            "data_path": "action_result.summary",
            "data_type": "string"
          },
          {
            "data_path": "action_result.message",
            "data_type": "string"
          },
          {
            "data_path": "action_result.status",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.start_date",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.start_format",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.end_date",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.end_format",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.difference",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.seconds",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.minutes",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.hours",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.days",
            "data_type": "string"
          }
        ],
        "versions":"EQ(*)"
      }
    ]
}
